name: Test & Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, ubuntu-20.04]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Install Nix with Flakes Support and Haskell Nix Binary Cache
        uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            trusted-users = root
            allowed-users = *

      - name: Use Cachix to Pull and Push Binary Cache
        uses: cachix/cachix-action@v8
        with:
          name: tricktron
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          
      - name: Reload Nix Daemon to Respect Cachix cache
        run: |
          if [ "$RUNNER_OS" = "macOS" ]; then
            sudo launchctl stop org.nixos.nix-daemon && sudo launchctl start org.nixos.nix-daemon
          elif [ "$RUNNER_OS" = "Linux" ]; then
            sudo systemctl restart nix-daemon
          else
            echo "RUNNER_OS not supported"
            exit 1
          fi
      
      - name: Get Developer Shell
        run: nix develop .

      - name: Run Tests
        run: |
          if [ "$RUNNER_OS" = "macOS" ]; then
            nix build .#checks.x86_64-darwin.test
          elif [ "$RUNNER_OS" = "Linux" ]; then
            nix build .#checks.x86_64-linux.test
          else
            echo "RUNNER_OS not supported"
            exit 1
          fi
      
      - name: Run Build
        run: nix build .
